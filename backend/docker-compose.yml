version: "3.9"

services:
  orchestrator:
    build:
      context: ./orchestrator
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      judge0:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/codebrainer
      SPRING_DATASOURCE_USERNAME: codebrainer
      SPRING_DATASOURCE_PASSWORD: codebrainer
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      STORAGE_BASE_PATH: /data/storage
      JUDGE0_API_URL: http://judge0:2358
      RABBITMQ_HOST: rabbitmq
      RABBITMQ_PORT: "5672"
      RABBITMQ_USERNAME: guest
      RABBITMQ_PASSWORD: guest
    volumes:
      - orchestrator-storage:/data/storage
    ports:
      - "8080:8080"

  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_DB: codebrainer
      POSTGRES_USER: codebrainer
      POSTGRES_PASSWORD: codebrainer
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U codebrainer -d codebrainer"]
      interval: 10s
      timeout: 5s
      retries: 5

  rabbitmq:
    image: rabbitmq:3-management
    restart: unless-stopped
    ports:
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  judge0:
    image: judge0/judge0:1.13.1
    restart: unless-stopped
    environment:
      JUDGE0_USE_WORKER: "false"
      JUDGE0_MAX_EXECUTION_TIME: "15"
      JUDGE0_MAX_OUTPUT_LENGTH: "8192"
    tmpfs:
      - /tmp
    ports:
      - "2358:2358"

volumes:
  orchestrator-storage:
  postgres-data:


